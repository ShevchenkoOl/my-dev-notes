// Express — це популярний фреймворк для Node.js, який спрощує створення веб-серверів та API.
// Навіщо потрібен Express:
//  1. Обробка HTTP-запитів
//      - Express дозволяє легко обробляти запити GET, POST, PUT, DELETE тощо.
//  2. Створення маршрутів (routes)
//      - Дає можливість задавати URL-адреси та дії, які виконуються при зверненні до них.
//  3. Підключення middleware
//      - Дає змогу використовувати сторонні або власні функції для обробки запитів (наприклад, логування, авторизація, обробка JSON).
//  4. Робота з API
//      - Express часто використовують для створення REST API — бекенду, до якого звертаються фронтенд-додатки або мобільні застосунки.
//  5. Сервірування статичних файлів
//      - Можна легко віддавати HTML, CSS, JS, зображення тощо.

// Встановлення: npm i express
// импортуємо: import express from "express";
// і викликаємо його як функцію: console.log(express());
// можна оголосити в нову зміну: const app = express(); - тепер наш app буде web-server
// для того щоб наш веб-сервер працбвав його треба запустити: app.listen(3000); - 3000 - порт на якому запускаємо скрвер, він може бути будь-який
// Для акпквірки чи скрвер працює, другим аргументом ми можемо передати колбек фенкцію:
// app.listen(3000, ()=> console.log("Server running on http://localhost:3000")); -після чого запкускаємо весь проект


// Робота з запитами на сервер:
// app.get("/", (request, response)=>{   // метод Express, який створює обробник запитів типу GET (наприклад, коли користувач просто відкриває сторінку в браузері).
//     console.log(request.url);           // /
//     console.log(request.method);        // GET
//     response.send("<h1>Home Page!</h1>") // Відправляє відповідь користувачеві, тобто при запуску серверу на порті 3000, і за адресою: / - на фронтенд ми передаєм Home Page!
// })


// або варіант з рендкрінгом сторвнки:
// app.get("/books", async (req, res) => {
//   const data = await readFile("./books.json", "utf-8");
//   const books = JSON.parse(data);          // JSON.parse(data) — перетворює текст JSON (рядок) у справжній JavaScript-об’єкт або масив.
//                                               В нашому випадку — books буде масивом об'єктів з полями title і description.
//   const html = books.map(book => `
//       <h1>${book.title}</h1>
//       <span>${book.description}</span>
//     `).join("");                        // .join("") — об’єднує всі ці HTML-блоки в один великий HTML-рядок (без ком).
//                                            Результат — змінна html містить всю HTML-розмітку, яку ми хочемо відправити в браузер.
//   res.send(html);         // див methods.js
// });